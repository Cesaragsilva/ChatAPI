// <auto-generated />
using System;
using Chat.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Chat.Infra.Data.Migrations
{
    [DbContext(typeof(ChatDbContext))]
    [Migration("20200721141616_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Chat.Domain.Models.Identity_Entities.UserClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserClaim");

                    b.HasData(
                        new
                        {
                            Id = new Guid("55b5effa-7ea4-4e32-9bb8-e0bdd191b86e"),
                            Name = "AdminClaim"
                        },
                        new
                        {
                            Id = new Guid("e66c0c35-fa66-4e69-9235-3eba45aca3d4"),
                            Name = "UsersManagement"
                        },
                        new
                        {
                            Id = new Guid("4cad8312-1f57-48de-99a8-1a1a7caa00c6"),
                            Name = "InterestsManagement"
                        },
                        new
                        {
                            Id = new Guid("c2d8ad4d-e248-48fc-be4b-ee3ef15eaa1d"),
                            Name = "UserInterestsManagement"
                        });
                });

            modelBuilder.Entity("Chat.Domain.Models.Identity_Entities.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bb3af9ee-4d11-4f2d-8c5c-5cc9d5efd9e0"),
                            Title = "Admin"
                        },
                        new
                        {
                            Id = new Guid("4df22b4f-27ca-48b9-a1c4-185200a5cdf1"),
                            Title = "Manager"
                        },
                        new
                        {
                            Id = new Guid("f9ae2877-5bee-4317-bbc5-0b12f82cb854"),
                            Title = "Regular User"
                        });
                });

            modelBuilder.Entity("Chat.Domain.Models.Identity_Entities.UserRoleClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClaimId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClaimId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoleClaim");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d82abfa6-a769-4097-8233-4add1d495b64"),
                            ClaimId = new Guid("55b5effa-7ea4-4e32-9bb8-e0bdd191b86e"),
                            RoleId = new Guid("bb3af9ee-4d11-4f2d-8c5c-5cc9d5efd9e0")
                        },
                        new
                        {
                            Id = new Guid("5169c192-5c95-4ef4-8ff6-9bf790b2a05f"),
                            ClaimId = new Guid("e66c0c35-fa66-4e69-9235-3eba45aca3d4"),
                            RoleId = new Guid("4df22b4f-27ca-48b9-a1c4-185200a5cdf1")
                        },
                        new
                        {
                            Id = new Guid("c61451f5-46e6-4f6f-a97c-70139614971e"),
                            ClaimId = new Guid("4cad8312-1f57-48de-99a8-1a1a7caa00c6"),
                            RoleId = new Guid("4df22b4f-27ca-48b9-a1c4-185200a5cdf1")
                        },
                        new
                        {
                            Id = new Guid("6e4eb59e-5e1a-494f-b06c-2d03322c664d"),
                            ClaimId = new Guid("c2d8ad4d-e248-48fc-be4b-ee3ef15eaa1d"),
                            RoleId = new Guid("4df22b4f-27ca-48b9-a1c4-185200a5cdf1")
                        },
                        new
                        {
                            Id = new Guid("5850951a-f951-492e-8bc7-3767cd7aecc5"),
                            ClaimId = new Guid("4cad8312-1f57-48de-99a8-1a1a7caa00c6"),
                            RoleId = new Guid("f9ae2877-5bee-4317-bbc5-0b12f82cb854")
                        });
                });

            modelBuilder.Entity("Chat.Domain.Models.Interest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Interests");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7956b9f9-95e6-4d71-ac4b-511a4df952bc"),
                            Name = "Kick Smaug out of the Lonely Mountain"
                        },
                        new
                        {
                            Id = new Guid("0394b33b-dc5e-4924-a565-0c4cb876d7fe"),
                            Name = "Chill in the Shire"
                        },
                        new
                        {
                            Id = new Guid("7de7833e-a6c1-4876-a596-564449b65835"),
                            Name = "Simply enter Mordor and destroy the One Ring where it was created"
                        });
                });

            modelBuilder.Entity("Chat.Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<Guid>("UserRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("UserRoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d17fee25-322c-40e9-a18f-98b2f03faf81"),
                            Name = "Thorin Oakenshield",
                            Password = "oaken123",
                            UserRoleId = new Guid("bb3af9ee-4d11-4f2d-8c5c-5cc9d5efd9e0"),
                            Username = "thorin123"
                        },
                        new
                        {
                            Id = new Guid("6157cd72-b417-42a0-b109-f28ad7678833"),
                            Name = "Bilbo Baggings",
                            Password = "baggings123",
                            UserRoleId = new Guid("4df22b4f-27ca-48b9-a1c4-185200a5cdf1"),
                            Username = "bilbo123"
                        },
                        new
                        {
                            Id = new Guid("39bf4b9a-44b3-47d7-8b90-e08c0ec2c9cb"),
                            Name = "Frodo Baggings",
                            Password = "baggins123",
                            UserRoleId = new Guid("f9ae2877-5bee-4317-bbc5-0b12f82cb854"),
                            Username = "frodo123"
                        });
                });

            modelBuilder.Entity("Chat.Domain.Models.UserInterest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InterestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("InterestId");

                    b.HasIndex("UserId");

                    b.ToTable("UserInterests");

                    b.HasData(
                        new
                        {
                            Id = new Guid("24e1abe0-b74c-409c-a14d-06827c322273"),
                            InterestId = new Guid("7956b9f9-95e6-4d71-ac4b-511a4df952bc"),
                            UserId = new Guid("d17fee25-322c-40e9-a18f-98b2f03faf81")
                        },
                        new
                        {
                            Id = new Guid("cab8b16d-60b0-4ec2-82bf-01304d2dcb05"),
                            InterestId = new Guid("0394b33b-dc5e-4924-a565-0c4cb876d7fe"),
                            UserId = new Guid("6157cd72-b417-42a0-b109-f28ad7678833")
                        },
                        new
                        {
                            Id = new Guid("53c915bb-2af2-4228-bc06-5caa43ba6941"),
                            InterestId = new Guid("7de7833e-a6c1-4876-a596-564449b65835"),
                            UserId = new Guid("39bf4b9a-44b3-47d7-8b90-e08c0ec2c9cb")
                        });
                });

            modelBuilder.Entity("Chat.Domain.Models.Identity_Entities.UserRoleClaim", b =>
                {
                    b.HasOne("Chat.Domain.Models.Identity_Entities.UserClaim", "Claim")
                        .WithMany("RoleClaims")
                        .HasForeignKey("ClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Chat.Domain.Models.Identity_Entities.UserRole", "Role")
                        .WithMany("RoleClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Chat.Domain.Models.User", b =>
                {
                    b.HasOne("Chat.Domain.Models.Identity_Entities.UserRole", "UserRole")
                        .WithMany("Users")
                        .HasForeignKey("UserRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Chat.Domain.Models.UserInterest", b =>
                {
                    b.HasOne("Chat.Domain.Models.Interest", "Interest")
                        .WithMany("UserInterests")
                        .HasForeignKey("InterestId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Chat.Domain.Models.User", "User")
                        .WithMany("UserInterests")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
