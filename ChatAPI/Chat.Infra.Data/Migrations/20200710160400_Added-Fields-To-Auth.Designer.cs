// <auto-generated />
using System;
using Chat.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Chat.Infra.Data.Migrations
{
    [DbContext(typeof(ChatDbContext))]
    [Migration("20200710160400_Added-Fields-To-Auth")]
    partial class AddedFieldsToAuth
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Chat.Domain.Models.Interest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Interests");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7956b9f9-95e6-4d71-ac4b-511a4df952bc"),
                            Name = "Kick Smaug out of the Lonely Mountain"
                        },
                        new
                        {
                            Id = new Guid("0394b33b-dc5e-4924-a565-0c4cb876d7fe"),
                            Name = "Chill in the Shire"
                        });
                });

            modelBuilder.Entity("Chat.Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d17fee25-322c-40e9-a18f-98b2f03faf81"),
                            Name = "Thorin Oakenshield",
                            Password = "oaken123",
                            Role = "Admin",
                            Username = "thorin123"
                        },
                        new
                        {
                            Id = new Guid("6157cd72-b417-42a0-b109-f28ad7678833"),
                            Name = "Bilbo Baggings",
                            Password = "baggings123",
                            Role = "Admin",
                            Username = "bilbo123"
                        });
                });

            modelBuilder.Entity("Chat.Domain.Models.UserInterest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InterestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("InterestId");

                    b.HasIndex("UserId");

                    b.ToTable("UserInterests");

                    b.HasData(
                        new
                        {
                            Id = new Guid("24e1abe0-b74c-409c-a14d-06827c322273"),
                            InterestId = new Guid("7956b9f9-95e6-4d71-ac4b-511a4df952bc"),
                            UserId = new Guid("d17fee25-322c-40e9-a18f-98b2f03faf81")
                        },
                        new
                        {
                            Id = new Guid("cab8b16d-60b0-4ec2-82bf-01304d2dcb05"),
                            InterestId = new Guid("0394b33b-dc5e-4924-a565-0c4cb876d7fe"),
                            UserId = new Guid("6157cd72-b417-42a0-b109-f28ad7678833")
                        });
                });

            modelBuilder.Entity("Chat.Domain.Models.UserInterest", b =>
                {
                    b.HasOne("Chat.Domain.Models.Interest", "Interest")
                        .WithMany("UserInterests")
                        .HasForeignKey("InterestId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Chat.Domain.Models.User", "User")
                        .WithMany("UserInterests")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
